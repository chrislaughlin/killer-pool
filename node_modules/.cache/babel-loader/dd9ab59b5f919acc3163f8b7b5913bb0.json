{"ast":null,"code":"import _objectSpread from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/claughlin/code/hackathon-2019/killer-pool/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './css/build.css';\nimport './css/more.css';\nimport KillerContainer from \"./killerContainer\";\nimport NewGame from './views/newGame';\nimport PlayingGame from './views/playingGame';\nvar GAME_STATES = {\n  newGame: 'NEW_GAME',\n  addPlayers: 'ADD_PLAYERS',\n  playingGame: 'PLAYING_GAMES'\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentView: GAME_STATES.newGame,\n      players: [],\n      currentPlayerIndex: 0\n    };\n\n    _this.onStartGame = function () {\n      return _this.setState({\n        currentView: GAME_STATES.playingGame\n      });\n    };\n\n    _this.addPlayer = function (name) {\n      _this.setState({\n        players: [].concat(_toConsumableArray(_this.state.players), [{\n          name: name,\n          lives: 3\n        }])\n      });\n    };\n\n    _this.nextPlayer = function () {\n      _this.setState(function (oldState) {\n        return {\n          currentPlayerIndex: oldState.currentPlayerIndex === oldState.players.length - 1 ? 0 : oldState.players[oldState.currentPlayerIndex + 1].lives === 0 ? oldState.currentPlayerIndex + 2 : oldState.currentPlayerIndex + 1\n        };\n      });\n    };\n\n    _this.addLife = function () {\n      _this.setState(function (oldState) {\n        return {\n          players: oldState.players.map(function (player, index) {\n            if (index === oldState.currentPlayerIndex) {\n              return _objectSpread({}, player, {\n                lives: player.lives + 1\n              });\n            } else {\n              return player;\n            }\n          })\n        };\n      });\n    };\n\n    _this.removeLife = function () {\n      _this.setState(function (oldState) {\n        return {\n          players: oldState.players.map(function (player, index) {\n            if (index === oldState.currentPlayerIndex) {\n              return _objectSpread({}, player, {\n                lives: player.lives !== 0 ? player.lives - 1 : 0\n              });\n            } else {\n              return player;\n            }\n          })\n        };\n      });\n    };\n\n    _this.getCurrentView = function (currentView, players) {\n      switch (currentView) {\n        case GAME_STATES.newGame:\n          return React.createElement(NewGame, {\n            onStartGame: _this.onStartGame,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n\n        case GAME_STATES.playingGame:\n          return React.createElement(PlayingGame, {\n            players: players,\n            addPlayer: _this.addPlayer,\n            nextPlayer: _this.nextPlayer,\n            currentPlayerIndex: _this.state.currentPlayerIndex,\n            addLife: _this.addLife,\n            removeLife: _this.removeLife,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentView = _this$state.currentView,\n          players = _this$state.players;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"killer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"pocket top-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"pocket top-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"pocket bottom-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"pocket bottom-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"pocket middle-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"pocket middle-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"break-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), this.getCurrentView(currentView, players)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/claughlin/code/hackathon-2019/killer-pool/src/index.js"],"names":["React","Component","ReactDOM","KillerContainer","NewGame","PlayingGame","GAME_STATES","newGame","addPlayers","playingGame","App","state","currentView","players","currentPlayerIndex","onStartGame","setState","addPlayer","name","lives","nextPlayer","oldState","length","addLife","map","player","index","removeLife","getCurrentView","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport './css/build.css';\nimport './css/more.css';\n\nimport KillerContainer from \"./killerContainer\";\nimport NewGame from './views/newGame';\nimport PlayingGame from './views/playingGame';\n\nconst GAME_STATES = {\n    newGame: 'NEW_GAME',\n    addPlayers: 'ADD_PLAYERS',\n    playingGame: 'PLAYING_GAMES'\n};\n\n\nclass App extends Component {\n\n    state = {\n        currentView: GAME_STATES.newGame,\n        players: [],\n        currentPlayerIndex: 0\n    };\n\n    onStartGame = () => this.setState({currentView: GAME_STATES.playingGame});\n\n    addPlayer = name => {\n        this.setState({\n            players: [\n                ...this.state.players,\n                {\n                    name,\n                    lives: 3\n                }\n            ]\n        })\n    };\n\n    nextPlayer = () => {\n        this.setState(oldState => {\n            return {\n                currentPlayerIndex:\n                    oldState.currentPlayerIndex ===\n                    oldState.players.length - 1\n                        ? 0\n                        : oldState.players[oldState.currentPlayerIndex + 1].lives === 0 ?\n                        oldState.currentPlayerIndex + 2 :\n                        oldState.currentPlayerIndex + 1\n            };\n        });\n    };\n\n    addLife = () => {\n        this.setState(oldState => {\n            return {\n                players: oldState.players.map((player, index) => {\n                    if (index === oldState.currentPlayerIndex) {\n                        return {\n                            ...player,\n                            lives: player.lives + 1\n                        }\n                    } else {\n                        return player;\n                    }\n                })\n            }\n        })\n    };\n\n    removeLife = () => {\n        this.setState(oldState => {\n            return {\n                players: oldState.players.map((player, index) => {\n                    if (index === oldState.currentPlayerIndex) {\n                        return {\n                            ...player,\n                            lives: player.lives !== 0 ? player.lives - 1 : 0\n                        }\n                    } else {\n                        return player;\n                    }\n                })\n            }\n        })\n    };\n\n    getCurrentView = (currentView, players) => {\n        switch (currentView) {\n            case GAME_STATES.newGame:\n                return <NewGame onStartGame={this.onStartGame}/>;\n            case GAME_STATES.playingGame:\n                return (\n                    <PlayingGame\n                        players={players}\n                        addPlayer={this.addPlayer}\n                        nextPlayer={this.nextPlayer}\n                        currentPlayerIndex={this.state.currentPlayerIndex}\n                        addLife={this.addLife}\n                        removeLife={this.removeLife}\n                    />\n                );\n        }\n    };\n\n\n\n    render() {\n        const {\n            currentView,\n            players\n        } = this.state;\n\n        return (\n            <div className=\"App\">\n                <section className=\"killer\">\n                    {/* Pockets */}\n                    <span className=\"pocket top-left\"/>\n                    <span className=\"pocket top-right\"/>\n                    <span className=\"pocket bottom-left\"/>\n                    <span className=\"pocket bottom-right\"/>\n                    <span className=\"pocket middle-left\"/>\n                    <span className=\"pocket middle-right\"/>\n                    <span className=\"break-line\"/>\n\n                        {\n                            this.getCurrentView(currentView, players)\n                        }\n                </section>\n            </div>\n        );\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App/>, rootElement);\n"]},"metadata":{},"sourceType":"module"}