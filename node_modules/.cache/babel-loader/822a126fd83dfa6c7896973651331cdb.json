{"ast":null,"code":"import _classCallCheck from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/claughlin/code/hackathon-2019/killer-pool/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/claughlin/code/hackathon-2019/killer-pool/src/views/playingGame.js\";\nimport React, { Component } from 'react';\nimport Logo from \"../img/logo.png\";\n\nvar PlayingGame =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlayingGame, _Component);\n\n  function PlayingGame() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PlayingGame);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PlayingGame)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showInput: false,\n      playerName: ''\n    };\n    _this._newPlayer = null;\n\n    _this.handleKeyPress = function (event) {\n      if (event.key == 'Enter') {\n        _this.props.addPlayer(_this.state.playerName);\n\n        _this.setState({\n          showInput: false,\n          playerName: ''\n        });\n      }\n    };\n\n    _this.updateInput = function (evt) {\n      _this.setState({\n        playerName: evt.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PlayingGame, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          players = _this$props.players,\n          nextPlayer = _this$props.nextPlayer,\n          currentPlayerIndex = _this$props.currentPlayerIndex,\n          addLife = _this$props.addLife,\n          removeLife = _this$props.removeLife;\n      var _this$state = this.state,\n          showInput = _this$state.showInput,\n          playerName = _this$state.playerName;\n      var playersWithInout = [];\n\n      if (showInput) {\n        playersWithInout = playersWithInout.concat({\n          showInput: true\n        });\n      }\n\n      playersWithInout = playersWithInout.concat(players);\n      return React.createElement(\"section\", {\n        className: \"content has-players\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Logo,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"add-player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, !showInput && React.createElement(\"button\", {\n        className: \"btn is-tertiary\",\n        onClick: function onClick() {\n          _this2.setState({\n            showInput: true\n          });\n\n          setTimeout(function () {\n            _this2._newPlayer.focus();\n          }, 300);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Add\")), React.createElement(\"ul\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, playersWithInout.map(function (player, index) {\n        if (player.showInput) {\n          return React.createElement(\"li\", {\n            className: \"new-player col-xs-12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            className: \"add-player-name\",\n            value: playerName,\n            onKeyPress: _this2.handleKeyPress,\n            onChange: _this2.updateInput,\n            ref: function ref(el) {\n              return _this2._newPlayer = el;\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }));\n        } else {\n          var className = 'col-xs-12 col-md-6 col-xl-4';\n          className = \"\".concat(className, \" \").concat(currentPlayerIndex === index && 'current');\n          className = \"\".concat(className, \" \").concat(player.lives === 0 && 'out');\n          return React.createElement(\"li\", {\n            \"data-count\": player.lives,\n            className: className,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, player.name);\n        }\n      })), React.createElement(\"section\", {\n        className: \"group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: removeLife,\n        className: \"btn is-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Remove\", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: nextPlayer,\n        className: \"btn is-black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Next\"), React.createElement(\"button\", {\n        onClick: addLife,\n        className: \"btn is-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return PlayingGame;\n}(Component);\n\n;\nexport default PlayingGame;","map":{"version":3,"sources":["/Users/claughlin/code/hackathon-2019/killer-pool/src/views/playingGame.js"],"names":["React","Component","Logo","PlayingGame","state","showInput","playerName","_newPlayer","handleKeyPress","event","key","props","addPlayer","setState","updateInput","evt","target","value","players","nextPlayer","currentPlayerIndex","addLife","removeLife","playersWithInout","concat","setTimeout","focus","map","player","index","el","className","lives","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Logo from \"../img/logo.png\";\n\nclass PlayingGame extends Component {\n\n    state = {\n        showInput: false,\n        playerName: ''\n    };\n\n    _newPlayer = null;\n\n    handleKeyPress = (event) => {\n        if(event.key == 'Enter'){\n            this.props.addPlayer(this.state.playerName);\n            this.setState({showInput: false, playerName: ''});\n        }\n    };\n\n    updateInput = evt => {\n        this.setState({playerName: evt.target.value});\n    };\n\n    render() {\n        const {\n            players,\n            nextPlayer,\n            currentPlayerIndex,\n            addLife,\n            removeLife\n        } = this.props;\n\n        const {\n            showInput,\n            playerName\n        } = this.state;\n\n        let playersWithInout = [];\n        if (showInput) {\n            playersWithInout = playersWithInout.concat(\n                {showInput: true}\n            );\n        }\n        playersWithInout = playersWithInout.concat(players);\n        return (\n            <section className=\"content has-players\">\n                <div className=\"logo\">\n                    <img src={Logo} alt=\"\"/>\n                </div>\n\n                <section className=\"add-player\">\n                    {\n                        !showInput &&\n                        <button\n                            className=\"btn is-tertiary\"\n                            onClick={() => {\n                                this.setState({showInput: true})\n                                setTimeout(() => {\n                                    this._newPlayer.focus();\n                                }, 300);\n                            }}\n                        >\n                            Add\n                        </button>\n                    }\n\n                </section>\n\n                <ul className=\"row\">\n                    {\n                        playersWithInout.map((player, index) => {\n                            if (player.showInput) {\n                                return (\n                                    <li\n                                        className=\"new-player col-xs-12\"\n                                    >\n                                        <input\n                                            className=\"add-player-name\"\n                                            value={playerName}\n                                            onKeyPress={this.handleKeyPress}\n                                            onChange={this.updateInput}\n                                            ref={el => this._newPlayer = el}\n                                        />\n                                    </li>\n                                );\n                            } else {\n                                let className = 'col-xs-12 col-md-6 col-xl-4';\n                                className = `${className} ${currentPlayerIndex === index && 'current'}`;\n                                className = `${className} ${player.lives === 0 && 'out'}`;\n                                return (\n                                    <li\n                                        data-count={player.lives}\n                                        className={className}\n                                    >\n                                        {player.name}\n                                    </li>\n                                )\n                            }\n\n                        })\n                    }\n                </ul>\n\n                <section className=\"group\">\n                    <button onClick={removeLife} className=\"btn is-white\">Remove<i/></button>\n                    <button onClick={nextPlayer} className=\"btn is-black\">Next</button>\n                    <button onClick={addLife} className=\"btn is-white\">Add</button>\n                </section>\n            </section>\n        );\n    }\n};\n\n\nexport default PlayingGame;\n\n"]},"metadata":{},"sourceType":"module"}